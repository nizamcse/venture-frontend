{"ast":null,"code":"var _jsxFileName = \"/Users/nizamuddin/Desktop/d2_8f_183c_7ced_4807_96a1_138bf7e1ac4d_master/src/components/kanban-board/BoardColumn.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BoardColumn = ({\n  tasks,\n  stageValue,\n  stageName\n}) => {\n  const [stageTasks, setStageTasks] = useState([]);\n  useEffect(() => {\n    let taskLists = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].stage === stageValue) {\n        taskLists.push(tasks[i]);\n      }\n    }\n\n    setStageTasks(taskLists);\n  }, [tasks, stageValue]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card outlined ml-20 mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, stageName), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"styled mt-50\",\n    \"data-testid\": `stage-${stageValue}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, stageTasks.map((task, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"slide-up-fade-in\",\n      key: `${stageValue}${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"li-content layout-row justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": `${task.name.split(\" \").join(\"-\")}-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }\n    }, task.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"icon-only x-small mx-2\",\n      \"data-testid\": `${task.name.split(\" \").join(\"-\")}-back`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }\n    }, \"arrow_back\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"icon-only x-small mx-2\",\n      \"data-testid\": `${task.name.split(\" \").join(\"-\")}-forward`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }\n    }, \"arrow_forward\")))));\n  }))));\n};\n\nBoardColumn.propTypes = {\n  tasks: PropTypes.array,\n  stageValue: PropTypes.number,\n  stageName: PropTypes.string\n};\nexport default BoardColumn;","map":{"version":3,"sources":["/Users/nizamuddin/Desktop/d2_8f_183c_7ced_4807_96a1_138bf7e1ac4d_master/src/components/kanban-board/BoardColumn.js"],"names":["React","useState","useEffect","PropTypes","BoardColumn","tasks","stageValue","stageName","stageTasks","setStageTasks","taskLists","i","length","stage","push","map","task","index","name","split","join","propTypes","array","number","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BoardColumn = ({ tasks, stageValue, stageName }) => {\n  const [stageTasks, setStageTasks] = useState([]);\n  useEffect(() => {\n    let taskLists = [];\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].stage === stageValue) {\n        taskLists.push(tasks[i]);\n      }\n    }\n    setStageTasks(taskLists);\n  }, [tasks, stageValue]);\n\n  return (\n    <div className=\"card outlined ml-20 mt-0\">\n      <div className=\"card-text\">\n        <h4>{stageName}</h4>\n        <ul className=\"styled mt-50\" data-testid={`stage-${stageValue}`}>\n          {stageTasks.map((task, index) => {\n            return (\n              <li className=\"slide-up-fade-in\" key={`${stageValue}${index}`}>\n                <div className=\"li-content layout-row justify-content-between align-items-center\">\n                  <span data-testid={`${task.name.split(\" \").join(\"-\")}-name`}>\n                    {task.name}\n                  </span>\n                  <div className=\"icons\">\n                    <button\n                      className=\"icon-only x-small mx-2\"\n                      data-testid={`${task.name.split(\" \").join(\"-\")}-back`}\n                    >\n                      <i className=\"material-icons\">arrow_back</i>\n                    </button>\n                    <button\n                      className=\"icon-only x-small mx-2\"\n                      data-testid={`${task.name.split(\" \").join(\"-\")}-forward`}\n                    >\n                      <i className=\"material-icons\">arrow_forward</i>\n                    </button>\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nBoardColumn.propTypes = {\n  tasks: PropTypes.array,\n  stageValue: PropTypes.number,\n  stageName: PropTypes.string,\n};\n\nexport default BoardColumn;\n"]},"metadata":{},"sourceType":"module"}