{"ast":null,"code":"var _jsxFileName = \"/Users/nizamuddin/Desktop/d2_8f_183c_7ced_4807_96a1_138bf7e1ac4d_master/src/components/kanban-board/index.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nexport default class KanbanBoard extends Component {\n  constructor(props) {\n    super(props); // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.state = {\n      tasks: this.props.tasks\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Done'];\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    let stagesTasks = [];\n\n    for (let i = 0; i < this.stagesNames.length; ++i) {\n      stagesTasks.push([]);\n    }\n\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-20 layout-column justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-50 layout-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, stagesTasks.map((tasks, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card outlined ml-20 mt-0\",\n        key: `${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      }, this.stagesNames[i]), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"styled mt-50\",\n        \"data-testid\": `stage-${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      }, tasks.map((task, index) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"slide-up-fade-in\",\n          key: `${i}${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 44\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"li-content layout-row justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.name.split(' ').join('-')}-name`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 41\n          }\n        }, task.name), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"icon-only x-small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-back`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 43\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 45\n          }\n        }, \"arrow_back\")), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"icon-only x-small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-forward`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 43\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 45\n          }\n        }, \"arrow_forward\")))));\n      }))));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/nizamuddin/Desktop/d2_8f_183c_7ced_4807_96a1_138bf7e1ac4d_master/src/components/kanban-board/index.js"],"names":["React","Component","KanbanBoard","constructor","props","state","tasks","stagesNames","render","stagesTasks","i","length","push","task","stageId","stage","map","index","name","split","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\n\nexport default class KanbanBoard extends Component {\n  constructor(props) {\n    super(props);\n    // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n    this.state = {\n        tasks: this.props.tasks\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Done'];\n  }\n \n  render() {\n    const { tasks } = this.state;\n\n    let stagesTasks = [];\n    for (let i = 0; i < this.stagesNames.length; ++i) {\n      stagesTasks.push([]);\n    }\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return (\n      <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n        <div className=\"mt-50 layout-row\">\n            {stagesTasks.map((tasks, i) => {\n                return (\n                    <div className=\"card outlined ml-20 mt-0\" key={`${i}`}>\n                        <div className=\"card-text\">\n                            <h4>{this.stagesNames[i]}</h4>\n                            <ul className=\"styled mt-50\" data-testid={`stage-${i}`}>\n                                {tasks.map((task, index) => {\n                                    return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                                      <div className=\"li-content layout-row justify-content-between align-items-center\">\n                                        <span data-testid={`${task.name.split(' ').join('-')}-name`}>{task.name}</span>\n                                        <div className=\"icons\">\n                                          <button className=\"icon-only x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-back`}>\n                                            <i className=\"material-icons\">arrow_back</i>\n                                          </button>\n                                          <button className=\"icon-only x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-forward`}>\n                                            <i className=\"material-icons\">arrow_forward</i>\n                                          </button>\n                                        </div>\n                                      </div>\n                                    </li>\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}