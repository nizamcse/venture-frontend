{"ast":null,"code":"var _jsxFileName = \"/Users/nizamuddin/Desktop/d2_8f_183c_7ced_4807_96a1_138bf7e1ac4d_master/src/components/kanban-board/KanbanBoard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BoardColumn from \"./BoardColumn\";\nimport PropTypes from \"prop-types\";\n\nconst KanbanBoard = ({\n  tasks\n}) => {\n  const stagesNames = [\"Backlog\", \"To Do\", \"Ongoing\", \"Done\"];\n  const [taskList, setTaskList] = useState([]);\n  useEffect(() => {\n    setTaskList(tasks);\n  }, [tasks]);\n\n  const onForwardStage = taskName => {\n    // Cloning the state first so that id does not impact on actual state\n    const cloneList = taskList.splice();\n    const updatedList = cloneList.map(task => {\n      if (task.name === taskName && task.state != 3) return { ...task,\n        state: task.stage + 1\n      };\n    });\n    console.log(updatedList, taskName);\n    setTaskList(updatedList);\n  };\n\n  const onBackwardStage = taskName => {\n    // Cloning the state first so that id does not impact on actual state\n    const cloneList = taskList.splice();\n    const updatedList = cloneList.map(task => {\n      if (task.name === taskName && task.state != 0) return { ...task,\n        state: task.stage - 1\n      };\n    });\n    setTaskList(updatedList);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-20 layout-column justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-50 layout-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, stagesNames.map((stageName, i) => /*#__PURE__*/React.createElement(BoardColumn, {\n    stageValue: i,\n    stageName: stageName,\n    tasks: tasks,\n    key: `${i}`,\n    onForward: onForwardStage,\n    onBackward: onBackwardStage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }))));\n};\n\nKanbanBoard.propTypes = {\n  tasks: PropTypes.array\n};\nexport default KanbanBoard;","map":{"version":3,"sources":["/Users/nizamuddin/Desktop/d2_8f_183c_7ced_4807_96a1_138bf7e1ac4d_master/src/components/kanban-board/KanbanBoard.js"],"names":["React","useState","useEffect","BoardColumn","PropTypes","KanbanBoard","tasks","stagesNames","taskList","setTaskList","onForwardStage","taskName","cloneList","splice","updatedList","map","task","name","state","stage","console","log","onBackwardStage","stageName","i","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACjC,QAAMC,WAAW,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,SAArB,EAAgC,MAAhC,CAApB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW,CAACH,KAAD,CAAX;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMI,cAAc,GAAIC,QAAD,IAAc;AACnC;AACA,UAAMC,SAAS,GAAGJ,QAAQ,CAACK,MAAT,EAAlB;AACA,UAAMC,WAAW,GAAGF,SAAS,CAACG,GAAV,CAAeC,IAAD,IAAU;AAC1C,UAAIA,IAAI,CAACC,IAAL,KAAcN,QAAd,IAA0BK,IAAI,CAACE,KAAL,IAAc,CAA5C,EACE,OAAO,EAAE,GAAGF,IAAL;AAAWE,QAAAA,KAAK,EAAEF,IAAI,CAACG,KAAL,GAAa;AAA/B,OAAP;AACH,KAHmB,CAApB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ,EAAyBH,QAAzB;AACAF,IAAAA,WAAW,CAACK,WAAD,CAAX;AACD,GATD;;AAUA,QAAMQ,eAAe,GAAIX,QAAD,IAAc;AACpC;AACA,UAAMC,SAAS,GAAGJ,QAAQ,CAACK,MAAT,EAAlB;AACA,UAAMC,WAAW,GAAGF,SAAS,CAACG,GAAV,CAAeC,IAAD,IAAU;AAC1C,UAAIA,IAAI,CAACC,IAAL,KAAcN,QAAd,IAA0BK,IAAI,CAACE,KAAL,IAAc,CAA5C,EACE,OAAO,EAAE,GAAGF,IAAL;AAAWE,QAAAA,KAAK,EAAEF,IAAI,CAACG,KAAL,GAAa;AAA/B,OAAP;AACH,KAHmB,CAApB;AAIAV,IAAAA,WAAW,CAACK,WAAD,CAAX;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,+DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,WAAW,CAACQ,GAAZ,CAAgB,CAACQ,SAAD,EAAYC,CAAZ,kBACf,oBAAC,WAAD;AACE,IAAA,UAAU,EAAEA,CADd;AAEE,IAAA,SAAS,EAAED,SAFb;AAGE,IAAA,KAAK,EAAEjB,KAHT;AAIE,IAAA,GAAG,EAAG,GAAEkB,CAAE,EAJZ;AAKE,IAAA,SAAS,EAAEd,cALb;AAME,IAAA,UAAU,EAAEY,eANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AAgBD,CA3CD;;AA6CAjB,WAAW,CAACoB,SAAZ,GAAwB;AACtBnB,EAAAA,KAAK,EAAEF,SAAS,CAACsB;AADK,CAAxB;AAIA,eAAerB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BoardColumn from \"./BoardColumn\";\nimport PropTypes from \"prop-types\";\n\nconst KanbanBoard = ({ tasks }) => {\n  const stagesNames = [\"Backlog\", \"To Do\", \"Ongoing\", \"Done\"];\n  const [taskList, setTaskList] = useState([]);\n  useEffect(() => {\n    setTaskList(tasks);\n  }, [tasks]);\n\n  const onForwardStage = (taskName) => {\n    // Cloning the state first so that id does not impact on actual state\n    const cloneList = taskList.splice();\n    const updatedList = cloneList.map((task) => {\n      if (task.name === taskName && task.state != 3)\n        return { ...task, state: task.stage + 1 };\n    });\n    console.log(updatedList, taskName);\n    setTaskList(updatedList);\n  };\n  const onBackwardStage = (taskName) => {\n    // Cloning the state first so that id does not impact on actual state\n    const cloneList = taskList.splice();\n    const updatedList = cloneList.map((task) => {\n      if (task.name === taskName && task.state != 0)\n        return { ...task, state: task.stage - 1 };\n    });\n    setTaskList(updatedList);\n  };\n\n  return (\n    <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n      <div className=\"mt-50 layout-row\">\n        {stagesNames.map((stageName, i) => (\n          <BoardColumn\n            stageValue={i}\n            stageName={stageName}\n            tasks={tasks}\n            key={`${i}`}\n            onForward={onForwardStage}\n            onBackward={onBackwardStage}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nKanbanBoard.propTypes = {\n  tasks: PropTypes.array,\n};\n\nexport default KanbanBoard;\n"]},"metadata":{},"sourceType":"module"}